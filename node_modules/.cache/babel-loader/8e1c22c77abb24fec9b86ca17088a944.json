{"ast":null,"code":"var _jsxFileName = \"/Users/mdhar6/Workspace/React-dev/ReduxPractice/src/game/Game.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { generateSetName1ActionWithName, generateSetName2ActionWithName } from \"../reducers/reducer\";\n\nconst Game = props => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: props.name1,\n    onChange: e => props.dispatchSetName1ActionWithName(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    onClick: props.clearName1(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Clear\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: props.name2,\n    onChange: e => props.dispatchSetName2ActionWithName(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  })));\n};\n\nconst mapStateToProps = state => ({\n  name1: state.name1,\n  name2: state.name2\n});\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchSetName1ActionWithName: name => dispatch(generateSetName1ActionWithName(name)),\n  dispatchSetName2ActionWithName: name => dispatch(generateSetName2ActionWithName(name)),\n  clearName1: () => dispatch(generateSetName1ActionWithName(\"\"))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);","map":{"version":3,"sources":["/Users/mdhar6/Workspace/React-dev/ReduxPractice/src/game/Game.js"],"names":["React","connect","generateSetName1ActionWithName","generateSetName2ActionWithName","Game","props","name1","e","dispatchSetName1ActionWithName","target","value","clearName1","name2","dispatchSetName2ActionWithName","mapStateToProps","state","mapDispatchToProps","dispatch","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,8BAAR,EAAwCC,8BAAxC,QAA6E,qBAA7E;;AAEA,MAAMC,IAAI,GAAGC,KAAK,IAAI;AACd,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,KAAK,EAAEA,KAAK,CAACC,KAApB;AAA2B,IAAA,QAAQ,EAAEC,CAAC,IAAIF,KAAK,CAACG,8BAAN,CAAqCD,CAAC,CAACE,MAAF,CAASC,KAA9C,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII;AAAQ,IAAA,OAAO,EAAEL,KAAK,CAACM,UAAN,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,KAAK,EAAEN,KAAK,CAACO,KAApB;AAA2B,IAAA,QAAQ,EAAEL,CAAC,IAAIF,KAAK,CAACQ,8BAAN,CAAqCN,CAAC,CAACE,MAAF,CAASC,KAA9C,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CALJ,CADJ;AAWP,CAZD;;AAcA,MAAMI,eAAe,GAAIC,KAAD,KAAY;AAChCT,EAAAA,KAAK,EAAES,KAAK,CAACT,KADmB;AAEhCM,EAAAA,KAAK,EAAEG,KAAK,CAACH;AAFmB,CAAZ,CAAxB;;AAKA,MAAMI,kBAAkB,GAAIC,QAAD,KAAe;AACtCT,EAAAA,8BAA8B,EAAGU,IAAD,IAAWD,QAAQ,CAACf,8BAA8B,CAACgB,IAAD,CAA/B,CADb;AAEtCL,EAAAA,8BAA8B,EAAGK,IAAD,IAAWD,QAAQ,CAACd,8BAA8B,CAACe,IAAD,CAA/B,CAFb;AAGtCP,EAAAA,UAAU,EAAE,MAAOM,QAAQ,CAACf,8BAA8B,CAAC,EAAD,CAA/B;AAHW,CAAf,CAA3B;;AAMA,eAAeD,OAAO,CAACa,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CZ,IAA7C,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from \"react-redux\";\nimport {generateSetName1ActionWithName, generateSetName2ActionWithName} from \"../reducers/reducer\";\n\nconst Game = props => {\n        return (\n            <div>\n                <div>\n                    <input value={props.name1} onChange={e => props.dispatchSetName1ActionWithName(e.target.value)} />\n                </div>\n                <button onClick={props.clearName1()}>Clear</button>\n                <div>\n                    <input value={props.name2} onChange={e => props.dispatchSetName2ActionWithName(e.target.value)} />\n                </div>\n            </div>\n        );\n};\n\nconst mapStateToProps = (state) => ({\n    name1: state.name1,\n    name2: state.name2\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    dispatchSetName1ActionWithName: (name) => (dispatch(generateSetName1ActionWithName(name))),\n    dispatchSetName2ActionWithName: (name) => (dispatch(generateSetName2ActionWithName(name))),\n    clearName1: () => (dispatch(generateSetName1ActionWithName(\"\"))),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\n"]},"metadata":{},"sourceType":"module"}