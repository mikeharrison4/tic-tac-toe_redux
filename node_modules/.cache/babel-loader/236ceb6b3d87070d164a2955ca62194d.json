{"ast":null,"code":"var _jsxFileName = \"/Users/mdhar6/Workspace/React-dev/ReduxPractice/tic-tac-toe/src/App.js\";\nimport React, { Component, Fragment } from 'react';\nimport './App.css';\nimport { connect } from \"react-redux\";\nimport { actionSetName } from './ducks/playersReducer';\nimport { startGame } from './ducks/gameReadyReducer';\nimport InputNames from \"./components/inputNames\";\nimport Board from \"./components/Board\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      inputDisabled: false\n    };\n\n    this.handleInputDisabled = () => {\n      this.setState({\n        inputDisabled: !this.state.inputDisabled\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, !this.props.gameReady && React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(InputNames, {\n      disabled: this.state.inputDisabled,\n      handleDisabled: this.handleInputDisabled,\n      name1: this.props.name1,\n      name2: this.props.name2,\n      actionSetName: this.props.actionSetName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.props.startGame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"START\")), this.props.gameReady && React.createElement(Board, {\n      show: this.state.inputDisabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => ({\n  name1: state.players[0],\n  name2: state.players[1],\n  gameReady: state.gameReady\n});\n\nexport default connect(mapStateToProps, {\n  actionSetName,\n  startGame\n})(App);","map":{"version":3,"sources":["/Users/mdhar6/Workspace/React-dev/ReduxPractice/tic-tac-toe/src/App.js"],"names":["React","Component","Fragment","connect","actionSetName","startGame","InputNames","Board","App","state","inputDisabled","handleInputDisabled","setState","render","props","gameReady","name1","name2","mapStateToProps","players"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAO,WAAP;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,GAAN,SAAkBP,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACxBQ,KADwB,GAChB;AACNC,MAAAA,aAAa,EAAE;AADT,KADgB;;AAAA,SAK5BC,mBAL4B,GAKN,MAAM;AACxB,WAAKC,QAAL,CAAc;AACVF,QAAAA,aAAa,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADjB,OAAd;AAGH,KAT2B;AAAA;;AAW5BG,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAAC,KAAKC,KAAL,CAAWC,SAAZ,IACG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AACI,MAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWC,aADzB;AAEI,MAAA,cAAc,EAAE,KAAKC,mBAFzB;AAGI,MAAA,KAAK,EAAE,KAAKG,KAAL,CAAWE,KAHtB;AAII,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWG,KAJtB;AAKI,MAAA,aAAa,EAAE,KAAKH,KAAL,CAAWV,aAL9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAQI;AAAS,MAAA,OAAO,EAAE,KAAKU,KAAL,CAAWT,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eARJ,CAFR,EAaU,KAAKS,KAAL,CAAWC,SAAX,IACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,KAAKN,KAAL,CAAWC,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdZ,CADJ;AAmBC;;AA/BuB;;AAgC3B;;AAED,MAAMQ,eAAe,GAAIT,KAAD,KAAY;AAChCO,EAAAA,KAAK,EAAEP,KAAK,CAACU,OAAN,CAAc,CAAd,CADyB;AAEhCF,EAAAA,KAAK,EAAER,KAAK,CAACU,OAAN,CAAc,CAAd,CAFyB;AAGhCJ,EAAAA,SAAS,EAAEN,KAAK,CAACM;AAHe,CAAZ,CAAxB;;AAMA,eAAeZ,OAAO,CAACe,eAAD,EAAkB;AAAEd,EAAAA,aAAF;AAAiBC,EAAAA;AAAjB,CAAlB,CAAP,CAAuDG,GAAvD,CAAf","sourcesContent":["import React, {Component, Fragment} from 'react';\nimport './App.css';\nimport {connect} from \"react-redux\";\nimport { actionSetName } from './ducks/playersReducer'\nimport { startGame } from './ducks/gameReadyReducer'\nimport InputNames from \"./components/inputNames\";\nimport Board from \"./components/Board\";\n\nclass App extends Component {\n    state = {\n      inputDisabled: false\n};\n\nhandleInputDisabled = () => {\n    this.setState({\n        inputDisabled: !this.state.inputDisabled\n    })\n};\n\nrender() {\n    return (\n        <div className=\"App\">\n            {!this.props.gameReady &&\n                <Fragment>\n                    <InputNames\n                        disabled={this.state.inputDisabled}\n                        handleDisabled={this.handleInputDisabled}\n                        name1={this.props.name1}\n                        name2={this.props.name2}\n                        actionSetName={this.props.actionSetName}\n                    />\n                    < button onClick={this.props.startGame}>START</button>\n                </Fragment>\n                }\n                { this.props.gameReady &&\n                    <Board show={this.state.inputDisabled} />\n                }\n            </div>\n        )\n    }\n};\n\nconst mapStateToProps = (state) => ({\n    name1: state.players[0],\n    name2: state.players[1],\n    gameReady: state.gameReady\n});\n\nexport default connect(mapStateToProps, { actionSetName, startGame })(App);\n"]},"metadata":{},"sourceType":"module"}