{"ast":null,"code":"const initialState = [null, null, null, null, null, null, null, null, null];\nexport const actionPlace = (index, playerTurn) => ({\n  type: 'PLACE',\n  index,\n  playerTurn\n});\nexport const clearBoard = () => ({\n  type: 'CLEAR'\n});\n\nconst boardReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'PLACE':\n      return state.map((val, index) => {\n        return index === action.index ? action.playerTurn : state[index];\n      });\n\n    case 'CLEAR':\n      return [null, null, null, null, null, null, null, null, null];\n\n    default:\n      return state;\n  }\n};\n\nexport default boardReducer;","map":{"version":3,"sources":["/Users/mdhar6/Workspace/React-dev/ReduxPractice/tic-tac-toe/src/ducks/boardReducer.js"],"names":["initialState","actionPlace","index","playerTurn","type","clearBoard","boardReducer","state","action","map","val"],"mappings":"AAAA,MAAMA,YAAY,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,CAArB;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,UAAR,MAAwB;AAChDC,EAAAA,IAAI,EAAE,OAD0C;AAEhDF,EAAAA,KAFgD;AAGhDC,EAAAA;AAHgD,CAAxB,CAApB;AAMP,OAAO,MAAME,UAAU,GAAG,OAAO;AAC7BD,EAAAA,IAAI,EAAE;AADuB,CAAP,CAAnB;;AAIP,MAAME,YAAY,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AACnD,UAAQA,MAAM,CAACJ,IAAf;AACI,SAAK,OAAL;AACI,aAAOG,KAAK,CAACE,GAAN,CAAU,CAACC,GAAD,EAAMR,KAAN,KAAgB;AAC7B,eAAOA,KAAK,KAAKM,MAAM,CAACN,KAAjB,GAAyBM,MAAM,CAACL,UAAhC,GAA6CI,KAAK,CAACL,KAAD,CAAzD;AACH,OAFM,CAAP;;AAGJ,SAAK,OAAL;AACI,aAAO,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,CAAP;;AACJ;AACI,aAAOK,KAAP;AARR;AAUH,CAXD;;AAaA,eAAeD,YAAf","sourcesContent":["const initialState = [null, null, null, null, null, null, null, null, null];\n\nexport const actionPlace = (index, playerTurn) => ({\n   type: 'PLACE',\n   index,\n   playerTurn\n});\n\nexport const clearBoard = () => ({\n    type: 'CLEAR'\n});\n\nconst boardReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'PLACE':\n            return state.map((val, index) => {\n                return index === action.index ? action.playerTurn : state[index];\n            });\n        case 'CLEAR':\n            return [null, null, null, null, null, null, null, null, null];\n        default:\n            return state;\n        }\n};\n\nexport default boardReducer;\n"]},"metadata":{},"sourceType":"module"}