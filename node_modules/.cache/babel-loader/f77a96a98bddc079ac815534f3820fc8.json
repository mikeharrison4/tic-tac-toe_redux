{"ast":null,"code":"var _jsxFileName = \"/Users/mdhar6/Workspace/React-dev/ReduxPractice/tic-tac-toe/src/components/Board.js\";\nimport React from 'react';\nimport BoardSquare from \"./BoardSquare\";\nimport { connect } from \"react-redux\";\nimport { actionPlace } from \"../ducks/boardReducer\";\n\nconst Board = props => {\n  console.log(props.board);\n  return React.createElement(\"div\", {\n    className: \"board\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, props.board.map((square, index) => React.createElement(BoardSquare, {\n    key: index,\n    square: square,\n    index: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  })));\n};\n\nconst mapStateToProps = state => ({\n  board: state.board\n});\n\nexport default connect(mapStateToProps)(Board);","map":{"version":3,"sources":["/Users/mdhar6/Workspace/React-dev/ReduxPractice/tic-tac-toe/src/components/Board.js"],"names":["React","BoardSquare","connect","actionPlace","Board","props","console","log","board","map","square","index","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,QAA0B,uBAA1B;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACnBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,KAAlB;AACI,SACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,KAAK,CAACG,KAAN,CAAYC,GAAZ,CAAiB,CAACC,MAAD,EAASC,KAAT,KACd,oBAAC,WAAD;AACI,IAAA,GAAG,EAAEA,KADT;AAEI,IAAA,MAAM,EAAED,MAFZ;AAGI,IAAA,KAAK,EAAEC,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADL,CADJ;AAWP,CAbD;;AAeA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChCL,EAAAA,KAAK,EAAEK,KAAK,CAACL;AADmB,CAAZ,CAAxB;;AAIA,eAAeN,OAAO,CAACU,eAAD,CAAP,CAAyBR,KAAzB,CAAf","sourcesContent":["import React from 'react';\nimport BoardSquare from \"./BoardSquare\";\nimport {connect} from \"react-redux\";\nimport {actionPlace} from \"../ducks/boardReducer\";\n\nconst Board = props => {\n    console.log(props.board)\n        return (\n            <div className='board'>\n                {props.board.map( (square, index) => (\n                    <BoardSquare\n                        key={index}\n                        square={square}\n                        index={index}\n                    />\n                ) )}\n            </div>\n        );\n};\n\nconst mapStateToProps = (state) => ({\n    board: state.board\n});\n\nexport default connect(mapStateToProps)(Board);\n"]},"metadata":{},"sourceType":"module"}