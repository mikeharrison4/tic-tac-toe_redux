{"ast":null,"code":"var _jsxFileName = \"/Users/mdhar6/Workspace/React-dev/ReduxPractice/tic-tac-toe/src/App.js\";\nimport React, { Component, Fragment } from 'react';\nimport './App.css';\nimport { connect } from \"react-redux\";\nimport { actionSetName } from './ducks/playersReducer';\nimport { startGame } from './ducks/gameReadyReducer';\nimport InputNames from \"./components/inputNames\";\nimport Board from \"./components/Board\";\n\nclass App extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, !this.props.gameReady && React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(InputNames, {\n      name1: this.props.name1,\n      name2: this.props.name2,\n      actionSetName: this.props.actionSetName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.props.startGame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"START\")), this.props.gameReady && React.createElement(Board, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    })));\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => ({\n  name1: state.players[0],\n  name2: state.players[1],\n  gameReady: state.gameReady\n});\n\nexport default connect(mapStateToProps, {\n  actionSetName,\n  startGame\n})(App);","map":{"version":3,"sources":["/Users/mdhar6/Workspace/React-dev/ReduxPractice/tic-tac-toe/src/App.js"],"names":["React","Component","Fragment","connect","actionSetName","startGame","InputNames","Board","App","render","props","gameReady","name1","name2","mapStateToProps","state","players"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAO,WAAP;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,GAAN,SAAkBP,SAAlB,CAA4B;AAC5BQ,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,CAAC,KAAKC,KAAL,CAAWC,SAAZ,IACG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AACI,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,KADtB;AAEI,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWG,KAFtB;AAGI,MAAA,aAAa,EAAE,KAAKH,KAAL,CAAWN,aAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMI;AAAQ,MAAA,OAAO,EAAE,KAAKM,KAAL,CAAWL,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANJ,CAFJ,EAWM,KAAKK,KAAL,CAAWC,SAAX,IACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZR,CADJ,CADJ;AAmBC;;AArBuB;;AAsB3B;;AAED,MAAMG,eAAe,GAAIC,KAAD,KAAY;AAChCH,EAAAA,KAAK,EAAEG,KAAK,CAACC,OAAN,CAAc,CAAd,CADyB;AAEhCH,EAAAA,KAAK,EAAEE,KAAK,CAACC,OAAN,CAAc,CAAd,CAFyB;AAGhCL,EAAAA,SAAS,EAAEI,KAAK,CAACJ;AAHe,CAAZ,CAAxB;;AAMA,eAAeR,OAAO,CAACW,eAAD,EAAkB;AAAEV,EAAAA,aAAF;AAAiBC,EAAAA;AAAjB,CAAlB,CAAP,CAAuDG,GAAvD,CAAf","sourcesContent":["import React, {Component, Fragment} from 'react';\nimport './App.css';\nimport {connect} from \"react-redux\";\nimport { actionSetName } from './ducks/playersReducer'\nimport { startGame } from './ducks/gameReadyReducer'\nimport InputNames from \"./components/inputNames\";\nimport Board from \"./components/Board\";\n\nclass App extends Component {\nrender() {\n    return (\n        <div className=\"App\">\n            <div>\n            {!this.props.gameReady &&\n                <Fragment>\n                    <InputNames\n                        name1={this.props.name1}\n                        name2={this.props.name2}\n                        actionSetName={this.props.actionSetName}\n                    />\n                    <button onClick={this.props.startGame}>START</button>\n                </Fragment>\n                }\n                { this.props.gameReady &&\n                    <Board />\n                }\n            </div>\n        </div>\n        )\n    }\n};\n\nconst mapStateToProps = (state) => ({\n    name1: state.players[0],\n    name2: state.players[1],\n    gameReady: state.gameReady\n});\n\nexport default connect(mapStateToProps, { actionSetName, startGame })(App);\n"]},"metadata":{},"sourceType":"module"}