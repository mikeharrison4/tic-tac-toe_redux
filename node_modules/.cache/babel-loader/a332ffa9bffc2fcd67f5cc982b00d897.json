{"ast":null,"code":"import { setWinningSquares } from \"../ducks/winningSquaresReducer\";\nimport { setGameFinished } from \"../ducks/gameWonReducer\";\nimport { addOneToScore } from \"../ducks/scoresReducer\";\nimport { changePlayer } from \"../ducks/currentPlayerReducer\";\nexport const handleGameFinishing = (s1, s2, s3) => (dispatch, getState) => {\n  dispatch(setWinningSquares(s1, s2, s3));\n  dispatch(setGameFinished());\n  dispatch(changePlayer());\n  const winningPlayer = getState().currentPlayer === 'X' ? getState().players[0] : getState().players[1];\n  dispatch(addOneToScore(winningPlayer));\n};","map":{"version":3,"sources":["/Users/mdhar6/Workspace/React-dev/ReduxPractice/tic-tac-toe/src/thunks/handleGameFinishing.js"],"names":["setWinningSquares","setGameFinished","addOneToScore","changePlayer","handleGameFinishing","s1","s2","s3","dispatch","getState","winningPlayer","currentPlayer","players"],"mappings":"AAAA,SAAQA,iBAAR,QAAgC,gCAAhC;AACA,SAAQC,eAAR,QAA8B,yBAA9B;AACA,SAAQC,aAAR,QAA4B,wBAA5B;AACA,SAAQC,YAAR,QAA2B,+BAA3B;AAEA,OAAO,MAAMC,mBAAmB,GAAG,CAACC,EAAD,EAAKC,EAAL,EAASC,EAAT,KAAgB,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACvED,EAAAA,QAAQ,CAACR,iBAAiB,CAACK,EAAD,EAAKC,EAAL,EAASC,EAAT,CAAlB,CAAR;AACAC,EAAAA,QAAQ,CAACP,eAAe,EAAhB,CAAR;AACAO,EAAAA,QAAQ,CAACL,YAAY,EAAb,CAAR;AAEA,QAAMO,aAAa,GAAGD,QAAQ,GAAGE,aAAX,KAA6B,GAA7B,GAAmCF,QAAQ,GAAGG,OAAX,CAAmB,CAAnB,CAAnC,GAChBH,QAAQ,GAAGG,OAAX,CAAmB,CAAnB,CADN;AAGAJ,EAAAA,QAAQ,CAACN,aAAa,CAACQ,aAAD,CAAd,CAAR;AACH,CATM","sourcesContent":["import {setWinningSquares} from \"../ducks/winningSquaresReducer\";\nimport {setGameFinished} from \"../ducks/gameWonReducer\";\nimport {addOneToScore} from \"../ducks/scoresReducer\";\nimport {changePlayer} from \"../ducks/currentPlayerReducer\";\n\nexport const handleGameFinishing = (s1, s2, s3) => (dispatch, getState) => {\n    dispatch(setWinningSquares(s1, s2, s3));\n    dispatch(setGameFinished());\n    dispatch(changePlayer());\n\n    const winningPlayer = getState().currentPlayer === 'X' ? getState().players[0]\n        : getState().players[1];\n\n    dispatch(addOneToScore(winningPlayer));\n};\n\n\n"]},"metadata":{},"sourceType":"module"}